// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QNBScoring.Infrastructure.Data;

#nullable disable

namespace QNBScoring.Infrastructure.Migrations
{
    [DbContext(typeof(QNBScoringDbContext))]
    [Migration("20250521085909_AddChanges")]
    partial class AddChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QNBScoring.Core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ADesIncidents")
                        .HasColumnType("bit");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassificationSED")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEntreeEnRelation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.DemandeChequier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DemandeChequierId")
                        .HasColumnType("int");

                    b.Property<double>("Valeur")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DemandeChequierId")
                        .IsUnique();

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.TransactionBancaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Narrative1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narrative2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narrative3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narrative4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostGrpUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReconcileRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TranAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TranCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranDescEng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.DemandeChequier", b =>
                {
                    b.HasOne("QNBScoring.Core.Entities.Client", "Client")
                        .WithMany("Demandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.Score", b =>
                {
                    b.HasOne("QNBScoring.Core.Entities.DemandeChequier", "Demande")
                        .WithOne("Score")
                        .HasForeignKey("QNBScoring.Core.Entities.Score", "DemandeChequierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.TransactionBancaire", b =>
                {
                    b.HasOne("QNBScoring.Core.Entities.Client", "Client")
                        .WithMany("Transactions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.Client", b =>
                {
                    b.Navigation("Demandes");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("QNBScoring.Core.Entities.DemandeChequier", b =>
                {
                    b.Navigation("Score");
                });
#pragma warning restore 612, 618
        }
    }
}
